{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\nimport flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] < Date.now()) {\n            startButton.disabled = true;\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n        }\n        else {\n            startButton.disabled = false;\n            userSelectedDate = selectedDates[0];\n        }\n  },\n};\n\nflatpickr('#datetime-picker', options);\nlet userSelectedDate;\n// flatpickr\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n    const day = hour * 24;\n    \n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n//ConvertMs\n\nconst startButton = document.querySelector('.timer-section button')\nstartButton.disabled = true;\nstartButton.addEventListener('click', startTimer)\n\nfunction startTimer() {\n    startButton.disabled = true;\n    document.getElementById(\"datetime-picker\").disabled = true;\n\n    let startingDate = userSelectedDate.getTime() - Date.now();\n    \n    const intervalID = setInterval(() => {\n        if (startingDate > 1000) {\n            startingDate -= 1000;\n            setCurrentTime(convertMs(startingDate))\n        }\n        else {\n            clearInterval(intervalID);\n        }\n    }, 1000);\n}\n\nfunction setCurrentTime(time) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(time.days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(time.hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(time.minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(time.seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}"],"names":["options","selectedDates","startButton","iziToast","userSelectedDate","flatpickr","convertMs","ms","days","hours","minutes","seconds","startTimer","startingDate","intervalID","setCurrentTime","time","addLeadingZero","value"],"mappings":"sGAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC3BC,EAAY,SAAW,GACvBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,IAGDD,EAAY,SAAW,GACvBE,EAAmBH,EAAc,CAAC,EAE3C,CACH,EAEAI,EAAU,mBAAoBL,CAAO,EACrC,IAAII,EAGJ,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,MAAMT,EAAc,SAAS,cAAc,uBAAuB,EAClEA,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASU,CAAU,EAEhD,SAASA,GAAa,CAClBV,EAAY,SAAW,GACvB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GAEtD,IAAIW,EAAeT,EAAiB,QAAS,EAAG,KAAK,IAAG,EAExD,MAAMU,EAAa,YAAY,IAAM,CAC7BD,EAAe,KACfA,GAAgB,IAChBE,EAAeT,EAAUO,CAAY,CAAC,GAGtC,cAAcC,CAAU,CAE/B,EAAE,GAAI,CACX,CAEA,SAASC,EAAeC,EAAM,CAC1B,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeD,EAAK,IAAI,EAC5E,SAAS,cAAc,cAAc,EAAE,YAAcC,EAAeD,EAAK,KAAK,EAC9E,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EAAeD,EAAK,OAAO,EAClF,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EAAeD,EAAK,OAAO,CACtF,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}